# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

###########################################################################
#                                                                         #
#   singer.properties sets singer global parameters                       #
#                                                                         #
###########################################################################

# [required] log stream processors thread pool size
singer.threadPoolSize = 20

# [required] kafka writers thread pool size
singer.writerThreadPoolSize = 60

# [required] port # for exposing finagle-ostrich metrics
singer.ostrichPort = 2073

# [required] monitor interval in seconds
singer.monitor.monitorIntervalInSecs = 10

# [required] Watcher interval secs
singer.logConfigPollIntervalSecs = 10

# [optional] the tdsb host and port for pushing Singer stats to
# singer.statsPusherHostPort = localhost:18126

#############################################################################
#                                                                           #
#  'singer.restart' specifies Singer restart related settings. You can use  #
#  `upstart` to watch and restart Singer when it exits.                     #
#                                                                           #
#############################################################################

# [required] whether Singer should exit and have `upstart` restart Singer
singer.restart.onFailures = true

# [required] # of failures that Singer will tolerate before exiting
singer.restart.numberOfFailuresAllowed = 1800

# [required] whether Singer does a daily restart to reset its states
singer.restart.daily = true

# [required] the starting time of Singer restart time slot
singer.restart.dailyRestartUtcTimeRangeBegin = 21:45

# [required] ending time of Singer restart time slot
singer.restart.dailyRestartUtcTimeRangeEnd = 23:15


###############################################################################
#                                                                             #
#  Singer can send heartbeat to a central Kafka topic. The central topic can  #
#  be used for monitoring and alerting. `singer.heartbeat` specifies Singer   #
#  heartbeat related settings.                                                #
#                                                                             #
###############################################################################

# [required] whether enable singer heartbeat, the default value is 'true'
singer.heartbeatEnabled=true

# [required if singer.heartbeatEnabled == true] Heartbeat interval in seconds. For demo purpose,
# we set the interval to 10 seconds. The interval can be longer when we use Singer in production.
singer.heartbeat.intervalInSeconds = 10

# [required if singer.heartbeatEnabled == true] Heartbeat writerType. It can be `kafka` or other customized writers
singer.heartbeat.writer.writerType = kafka

# [required if singer.heartbeatEnabled == true] Heartbeat kafka topic
singer.heartbeat.writer.kafka.topic = singer_heartbeat

# [required if singer.heartbeatEnabled == true] bootstrap brokers file for kafka heartbeat topic
singer.heartbeat.writer.kafka.producerConfig.bootstrap.servers.file=/tmp/singer_tutorial/kafka_server.txt

# [required if singer.heartbeatEnabled == true] Kafka producer 'acks' setting for heartbeat messages
singer.heartbeat.writer.kafka.producerConfig.acks=1
